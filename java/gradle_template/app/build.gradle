/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
	id 'application'
	id 'java'
	id 'jacoco'
	id 'eclipse'
	id 'com.diffplug.spotless' version '6.23.3'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
	mavenCentral()
}

ext {
	assertjVersion = '3.11.1'
	guavaVersion = '33.0.0-jre'
	immutablesVersion = '2.9.2'
	jimfsVersion = '1.3.0'
	jqwikVersion = '1.8.2'
	jupiterVersion = '5.10.1'
	mockitoVersion = '5.8.0'
	picocliVersion = '4.7.5'
	slf4jVersion = '2.0.9'
}

dependencies {
	implementation "com.google.guava:guava:${guavaVersion}"

	// Immtutables
	annotationProcessor "org.immutables:value:${immutablesVersion}"
	compileOnly "org.immutables:value:${immutablesVersion}"
	compileOnly "org.immutables:builder:${immutablesVersion}"

	// CLI library
	implementation "info.picocli:picocli:${picocliVersion}"

	// Logging
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"
	implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

	// Test libraries
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"
	testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
	testImplementation "net.jqwik:jqwik:${jqwikVersion}"
	testImplementation "org.assertj:assertj-core:${assertjVersion}"
	testImplementation "com.google.jimfs:jimfs:${jimfsVersion}"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

application {
	mainClass = 'template.App'
}

spotless {
	java {
		googleJavaFormat()
	}
	groovyGradle {
		target '*.gradle', 'gradle/*.gradle'
		greclipse()
	}
}

compileJava {
	options.compilerArgs += [
		"-Aproject=${project.group}/${project.name}"
	]
}

compileTestJava {
	options.compilerArgs += '-parameters'
}

test {
	useJUnitPlatform {
		includeEngines 'junit-jupiter', 'jqwik'
	}

	include '**/*Properties.class'
	include '**/*Test.class'
	include '**/*Tests.class'

	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}
